
public class HW02_4110056015_2 extends FourSum {

	
	
	public static void main(String[] args) {
		int[] A = {3344, -8685, 782, 7499, 1015, 9918, 5232, -7367, 8255, 3795, 6568, 8293, 3654, -5155, 5300, -9300, -8696, -7838, -3107, 64, -269, -1193, 2923, -534, -511, -2051, 2984, -7103, -8456, -3295, 4295, 8134, -2083, 7827, -3954, 2911, 6995, 5425, -6018, 6257, -6058, 4512, 2993, 3291, 8063, -2290, -9339, 1453, 8818, 6014, -7736, 7671, 9054, -3200, -4676, 2045, -9154, 4626, -478, -115, 7344, 2746, -9723, 5077, 4991, 7144, -5789, 2643, 5758, -1862, -9529, -4230, -6054, 2826, -571, -2537, 4615, 3756, 7087, 7242, -1247, 6241, -5621, -7821, -4156, 9154, -3452, -6534, -7612, -2108, -3162, 2335, 2598, -4398, 239, 7886, -7922, -404, 9681, -1040, -7276, 6320, -1761, -9546, -3918, 5719, 3857, 4973, -3133, -6413, 2061, -6748, 6186, -8422, 8426, 1909, -696, -561, 5054, 7047, 7606, -8492, -7965, 8531, 5720, -7965, -4832, 7475, -1254, -6760, -9091, 7884, -5013, 8335, -7812, 1726, -8736, -6913, 5205, -6256, -5177, 588, -5803, -3172, -1786, -1877, -2470, -1134, 1202, 8026, 5504, -1247, 9258, 6795, 6831, -3907, 5488, -8616, 789, 2428, 4359, -3067, 9033, 3823, -8750, 3063, -6491, 3897, 2178, -9806, -5221, 5817, -6964, -9655, -8216, 2458, -5646, 9862, 4526, -5577, 9241, -2462, -437, 168, 9287, 3933, -6724, -6656, -4406, -9398, 109, -1570, -6136, -7244, 3401, -9055, -7307, -7429, 8911, 3029, -1327, -1333, 3667, 4320, 4200, 3829, -4009, 5921, 9984, 4579, 2044, 8302, -9704, -1016, -7790, 7941, 7686, 1527, 5903, 1184, -3533, -5747, 3734, 4366, 6865, 8496, 2498, 3710, -2467, -1541, 2163, -2077, -9165, 5202, -6748, -5286, 240, -8664, 1204, 7101, 2898, -344, 1467, 4341, 1020, -6370, -5082, 4420, -3807, 9389, -6787, -6155, -5026, -3846, -218, -586, -1965, 6607, -2758, 2967, -9497, -3796, -4671, 6015, 285, 3107, 2781, -5926, -1020, -7954, 9821, -6488, -2967, -1972, -3793, 3239, 7355, -4877, -5823, -4324, 1607, -1237, -7632, -2022, -7586, -9139, -413, 5531, -1709, -8905, 7244, 8192, 7151, 662, 9629, -8647, 5533, 6618, 3458, -8606, 1887, -6544, -2933, 7470, -1588, 5224, 130, 8602, 7335, -8928, 3040, 7367, -9339, -2765, -7867, -2720, 8345, 9147, 8957, -2325, -2776, -1936, -2417, 9134, -5493, 7666, 5004, 4724, 7376, -2174, -4842, 9380, -6577, -2362, -49, -4725, 1956, -5190, -5714, 7630, -6244, -8560, -5413, 1728, 2358, 1753, 9826, -7967, -2683, -1017, 640, -783, 8390, 5206, 6499, -5302, -7694, -8473, -9173, 7729, -4714, -5032, -1671, -1027, 3638, 79, 1746, -6613, -2203, -9673, -4857, 6536, -4690, 5091, -1661, -2698, -1148, 5894, -5370, 2255, 1661, 3885, 6036, -3384, -8276, 685, 9281, 6314, -2374, 6261, 3899, -1768, -492, -2028, 3891, -9753, -4992, 4006, -4207, -7308, -3235, -793, 6136, -9167, 1033, -4106, 5067, 1099, 1777, -8657, -7131, 1296, 7191, -82, -1246, -6095, 6330, -682, 8807, -417, 9338, -7526, -9264, -4663, -2797, -4057, -7836, -7405, 9088, 6138, 1999, -7238, -7718, -2854, -3713, 4658, -7892, 148, -3817, -2000, -7226, 5216, -3819, 2290, -3798, 1624, 4292, -437, -3663, -6266, -5945, -5878, -1423, -5674, 344, -7237, 831, 1204, 8569, 2381, 4103, -4614, -8199, -3742, -5119, -3182, 9864, 4337, 5613, -9217, -2014, -6149, -4232, 4493, 3288, 1915, 5251, 7874, 6692, -4785, 9610, 4370, 4071, 3628, -3838, -2182, -9450, 7978, 8254, 133, -7147, 5077, -5614, 4632, 5134, -2182, -3659, 495, -1396, -5932, 9833, -2295, 9474, 5410, -6172, 2486, -265, 3861, 1153, -4405, -4627, 8533, 167, 3284, -385, 4827, 4740, -7849, -6986, -6695, -662, -6348, -6520, 1058, 4917, 7072, 3222, 1317, 2066, -9913, -30, 5873, 1059, -9732, -7001, 8760, -2490, -3178, 1012, -3280, -4715, -1024, -7366, 7479, -9035, -3524, 3094, 5172, 4192, -4925, -5915, -8118, 9771, -7297, 3022, -7072, -7067, 691, -790, 317, 7869, -404, 4586, -3773, -439, 4887, 9068, -9055, 7231, -6969, 8020, 3888, 6810, 4736, -7841, -4290, 5212, -4454, -9601, 1117, -3389, 6508, 7082, 8699, -6086, -5956, -5721, 677, 2003, -582, 3575, 711, 5005, 8903, 6162, 0, 9268, -4059, -745, -9333, -2872, 3191, -3151, -8809, 3193, 4681, -6188, -5312, 8020, -1812, 2240, -9186, -2028, -7415, -672, 6531, 5877, -4043, -5716, 6727, -5821, 9144, 5469, -202, 4336, 9861, 5036, 5834, -7176, -8319, 820, 8651, 1, -4105, 3650, 6599, 771, -6915, 5965, 4545, -3965, -8939, -7940, -6658, 9334, -7971, -115, 8767, 7051, -8141, -402, 4540, 7536, 4331, -221, 4829, 5081, -3507, -2574, -5169, -2157, -7624, -2397, 5454, -8781, -7152, -304, 3511, 180, 8753, -2749, 7991, 3517, -5825, -3317, -2018, -7749, -6738, -6897, -6216, -2344, 576, 1222, -4091, -3647, 9722, -2957, -7999, 9659, 4911, -1634, -4108, 2474, -4365, 7694, -9805, -138, -4922, 2217, 1674, -6522, -2449, 3725, 1163, -5496, -1182, -8661, 870, -7301, -9690, -3988, -9340, 7618, -2441, 3489, -7460, 5249, 2517, 8577, 7322, 1207, -3797, -1281, 3551, 6401, -5652, -5606, -1918, -4568, 1592, -966, 7582, 5248, 5869, 9617, -3175, 7500, 9971, 2587, -4418, -1821, 5368, -7000, 3918, 4929, 713, -1946, -2047, 989, -7879, 3931, -6211, 7417, -4779, -2010, 6230, 8243, -9192, -1948, -8939, 7405, 3017, 3983, 6942, 1985, -9129, 18, 833, -4996, 6270, 7866, -7005, -604, -6114, 533, 6120, -7109, 5351, -9299, -969, 2593, 3289, -168, 8479, -1291, 3117, -5868, 3740, 8977, 4623, -3704, -3094, -9893, 6712, -5733, 2519, -4940, -2521, 1680, -4004, -9216, -6226, -6654, 5863, 1657, 5042, 7975, -2962, 3632, -9846, 9553, -495, 803, -8318, -2260, -7619, -4458, 2926, -1520, 7198, 1332, 5127, -6036, 7756, -2894, 7559, -4762, -8969, -3704, 9045, -5888, -8794, -5470, -1736, -2569, -5347, 0, -4860, -6444, -3133, 5278, -5074, -1124, -5472, 8754, 3555, 1461, 1437, -1131, 7084, -1840, -7112, -5462, -7824, 2501, -6702, 8502, -3432, 6249, -6763, 9107, 6681, 483, 7778, 8025, -1646, 778, 4561, -734, -5943, 233, 1100, 1660, -828, -5201, -9825, 7015, -4788, 3566, -277, 5536, -2621, 4258, 2914, -6904, -4098, 6512, 431, 6947, -2612, -1548, -425, 7054, -3046, -8162, -4856, -378, -7514, -1026, -3853, 7855, 7443, -8686, -3749, -3384, -3787, -2490, 9228, 2653, 7017, -1638, 9945, -3386, -4533, 7895, -1848, 5942, -3179, -9281, 9921, 513, -9088, -8429, -2821, 5965, -8999, -8561, -2523, -2800, 9432, 1383, -9543, -6409, -3870, 1781, 6241, 6758, 2009, -8089, -1345, 7926, 2482, 8390, 1674, 9412, 111, -8093, 9155, 8924, 9569, -8226, -996, -795, -426, 6482, 8077, 3582, 6903, 1104, 1966, 5321, -2547, 7679, -5981, 2299, -7650, -5201, 2979, -6791, 4141, -9713, -4566, -8646, -2917, -2968, -2128, 5170, -5563, -5272, 935, -3003, 5076, 6169, 3854, -8048, -571, -5567, -8065, 5319, -3517, 3250, 435, 8955, 1929, 2329, 9314, 1988, -7899, -1179, 9981, -2230, -7998, 4035, -3128, 6615, -9306, -808, -8327, -7922, 1700, 2390, 3538, 5857, -4177, 4129, -3103, 2885, 4136, 1662, 4398, -7516, 7439, 6383, 5012, -3722, 7230, -5193, -957, 9434, -4313, -8708, 9030, -6659, 3690, -2629, 8353, -2775, 1050, 2015, 2997, 250, 1756, -6742, -7481, 9485, 5112, -6716, 3043, -7783, 9826, 8276, -9513, 5582, 340, -6876, 3370, -4102, 5674, 5500, -7609, 1444, 7149, -4624, 1097, -2968, -8082, 9116, -3124, 911, 1704, 5032, -4819, 6435, -4570, 5117, 3918, 1797, 933, 107, 7947, -5668, 1335, -4395, 6048, -6292, -5848, 2741, -716, -1589, -6431, -4151, -7829, 366, 3337, 8170, -5772, 8935, 2364, 5794, -7965, 5378, -977, -9235, -605, 6467, 235, 9294, -4908, 5556, -3825, -4849, 1849, 2230, -2495, -4942, -7650, -4728, 9566, -4051, -339, -6005, 8591, 6030, -2389, -1252, 6884, 6705, -8577, -2917, -1245, -6487, 2911, -6337, -235, -878, -6028, -7531, -1592, 5966, -9987, -5698, -97, -7619, -3878, 6551, -5775, -5485, -2976, 9772, -1693, 4264, -579, 7950, 602, 9853, -9342, 604, 2900, 1678, -8532, -9349, 328, 2359, 5897, 1844, 8751, 4323, 8056, 2301, -5349, 1167, -5132, -1111, 9304, -1082, 6156, 2610, -5918, 159, 526, -2740, 1427, -2246, 5879, -8354, 6406, -6563, 8348, -1373, 3979, 9699, -9384, 8051, -2212, -440, -2081, 6735, -5623, 5610, 8234, 1229, -9716, -1698, 5691, -3939, -4240, 5044, -4287, 1274, -4346, -8389, 9809, 3227, -9275, -382, -7189, -6414, 9590, 2127, 1729, 5516, -8160, 162, 401, -9149, -1786, 9308, -9708, 2705, 7171, -3153, 1912, 2058, -9074, 1463, 5541, -302, -1844, -9884, 687, 8834, 1368, 9375, -6478, -7673, 409, 7766, 5108, -6505, -6249, 5640, 9969, 903, 2653, 9920, -7486, -2825, -8153, -1051, 1323, -3366, 8795, 6006, -1028, -4982, -7292, -6324, 3815, -7416, -1479, 3439, -6164, -6912, -4065, 7317, -5045, -7692, -2035, -8761, 8973, -3084, 1230, -60, 6212, 7635, 1742, -5043, 3319, -920, 659, 6375, -470, -1702, 2332, 9702, -5515, -6761, 3677, 8956, -1496, -4394, 6409, 8265, -8319, 7951, -3877, 3686, -1166, -4674, 7595, -5244, -3158, 2942, 3981, -8889, 29, 6606, -3166, 6251, 3335, -6901, -4067, 7168, -6152, -2641, 9642, 6199, 2159, -4964, -494, -462, 8124, -1685, -5917, 1963, 1741, -5184, 4305, 4029, 7565, -6103, 7088, 5849, -6487, -5740, -3945, -5322, -1842, -9045, -8640, 524, -8601, 4870, 4645, 4903, 766, 4133, 1519, 172, 9494, 8665, 3171, -7954, -1964, -2651, 5564, 6343, 2500, -6211, -8167, 6906, -4871, 489, 454, -9255, 2766, 585, -1957, -4663, 1652, 2153, -9239, -7697, 8873, -407, -2783, -7420, -5383, 9959, -3682, -6695, 9389, 1744, -5055, 6672, -6838, 3062, 6282, -3221, 6255, -9882, -427, -7584, 1394, -5387, 7917, -3469, -8894, 2777, -7558, 6070, 7354, -7521, -2924, -3652, 3811, 9579, 8855, 1407, -3334, 5305, -8494, -9715, 694, 5950, -7359, 1786, -3663, -6990, -9533, -5805, 3938, -6228, -2049, 8580, -739, -4571, -1189, -698, 2390, -7598, 1105, -9581, -2756, -128, -3189, -2873, 5362, 6161, 1268, -3547, -8339, -772, -4552, -6986, -8254, -2120, -6416, -9362, 435, -6528, 9146, -2993, -1688, 864, 6987, 5035, -5118, -2860, -5431, 7637, 284, -969, -8704, 5622, -2012, 4297, -8115, 7063, 544, 6405, -8847, -4456, 4729, -4903, -7796, 9304, -7579, 357, 3989, 9953, 1713, 6382, -164, -4414, 2089, 788, 8749, -4339, -834};
		long t1 = System.nanoTime();
		HW02_4110056015_2 T = new HW02_4110056015_2();
		System.out.print(T.F_sum(A));
		System.out.printf("\n%010d",(System.nanoTime()-t1));
	}
	
	
	
	public int F_sum(int[] A) {
		sort9c393b(A,0,A.length-1);
		int pSum;
		if(A[0]>0 ||A[A.length-1]<0)
			return 0;
		int cnt = 0,left,right;
		for(int i = 0;i<A.length-4 && A[i]<0;i++) {
			for(int j = i+1;j<A.length-3;j++) {
				pSum = A[i] + A[j];
				if(pSum > -1) {
					break;
				}
				left = j+1;
				right = A.length - 1;
				while(left<right) {
					if(pSum+A[left]+A[right]> 0) {
						right--;
					}else if(pSum+A[left]+A[right]< 0) {
						left++;
					}else {
						cnt++;
						right--;
						left++;
					}
				}
			}
		}
		
		return cnt;
	}
	public static void sort9c393b(int[] arr,int left,int right) {
        if(left < right) {
            int i = left;
            int j = right + 1;
            while(true) {
                while( i+1 < arr.length && arr[++i] < arr[left]);
                while( j-1 >= 0 && arr[--j] > arr[left]);
                if( i >= j) break;
                swapf4d4ba(arr,i , j);
            }
            swapf4d4ba(arr,left , j);
            sort9c393b(arr,left , j - 1);
            sort9c393b(arr,j + 1 , right);
            
        }
    }

    public static void swapf4d4ba(int[] arr,int i, int j){
        int temp = arr[i];
        arr[i] = arr[j];
        arr[j] = temp;
    }

}
